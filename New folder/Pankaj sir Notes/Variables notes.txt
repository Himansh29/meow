1. Local Variables

 1.1 These variables are created inside a method and should be used only with created method
 1.2 Local variables are accessed directly with its name
 1.3 It is mandatory to initialize local variables before it is used
 1.4 In JDK version 1.10 / 10 new datatype was introduced called as var. var datatype can store any kind of value,
	 but it has to be local variable. The dataype of var is dynamic type

Example 1:

public class A {
    
public static void main(String args[]) {
        
 System.out.println(i);
         A a1 = new A();
       
  a1.test();
    
}
    
   
 public void test(){
      
 int i = 10;
       
 System.out.println(i);
   
}
}

Output: Error

Example 2:

public class A {
    
public static void main(String args[]) {
         
int i = 10;
         
System.out.println(i);
  
   
}
    

}

Output: 10

Example 3:

public class A {
    
public static void main(String args[]) {
         
int i;
         
System.out.println(i);
  
   
}
    

}

Output: Error (Because withut initializing local variables we cannot use it)


Example 4:

public class A {
    
public static void main(String args[]) {
         
var i = 10.3;
         
var j = 10;
         
var k = "Pankaj";
         
var z = true;
         
System.out.println(i);
        
 System.out.println(j);
        
 System.out.println(k);
         
System.out.println(z);
  
   
 }
   
 
}
Output:
10.3

10

Pankaj

true


Example 5:

public class A {
    
public static void main(String args[]) {
         
var a1 = new A();
  
         
System.out.println(a1);
      
    
}
    

}
Output:
A@3caeaf62

Static variables:

1. These variables are created outside all the methods but inside a class using static word
2. These variables belongs to class
3. These variables has global access
4. It is not mandatory to initialize static variables. If we donot initialize then auto initialization would happen based on the datatype

Example 1:

public class A {
    
static int i = 10;
    
    
public static void main(String args[]) {
        
 
System.out.println(A.i);
        
A a1 = new A();
        
a1.test();
    
}
    
    
public void test(){
        
System.out.println(A.i);
    
}
    

}

Output:
10

10

Example 2:

public class A {
    
static var i;
    
    
public static void main(String args[]) {
           
System.out.println(A.i);
       
    
}

    

}

Output: Error (var datatype cannot be static)

Example 3:

public class A {
    
static int i;
    
    
public static void main(String args[]) {
           
System.out.println(A.i);
       
    
}

    

}

Output:
0









