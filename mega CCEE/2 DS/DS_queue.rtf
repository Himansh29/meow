{\rtf1\ansi\ansicpg1252\deff0\deflang16393{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset161 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs22 MCQs on Queue with answers\par
\par
\par
1.\tab A linear list of elements in which deletion can be done from one end (front) and insertion can take place only at the other end (rear) is known as a ?\par
\par
a)\tab Queue \par
b)\tab Stack\par
c)\tab Tree\par
d)\tab Linked list\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab Queue\par
\par
\par
\par
\par
2.\tab The data structure required for Breadth First Traversal on a graph is?\par
\par
a)\tab Stack\par
b)\tab Array\par
c)\tab Queue \par
d)\tab Tree\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab Queue\par
\par
\par
\par
\par
3.\tab Let the following circular queue can accommodate maximum six elements with the following data\par
\par
front = 2 rear = 4\par
queue = _______; L, M, N, ___, ___\par
What will happen after ADD O operation takes place?\par
a)\tab front = 2 rear = 5\par
queue = ______; L, M, N, O, ___ \par
b)\tab front = 3 rear = 5\par
queue = L, M, N, O, ___\par
c)\tab front = 3 rear = 4\par
queue = ______; L, M, N, O, ___\par
d)\tab front = 2 rear = 4\par
queue = L, M, N, O, ___\par
View Answer / Hide Answer\par
\par
ANSWER: a)\par
\par
\par
\par
\par
4.\tab A queue is a ?\par
\par
a)\tab FIFO (First In First Out) list \par
b)\tab LIFO (Last In First Out) list.\par
c)\tab Ordered array\par
d)\tab Linear tree\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab FIFO (First In First Out) list\par
\par
\par
\par
\par
5.\tab In Breadth First Search of Graph, which of the following data structure is used?\par
\par
a)\tab Stack\par
b)\tab Queue \par
c)\tab Linked list\par
d)\tab None \par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab Queue\par
\par
\par
\par
\par
6.\tab If the elements \ldblquote A\rdblquote , \ldblquote B\rdblquote , \ldblquote C\rdblquote  and \ldblquote D\rdblquote  are placed in a queue and are deleted one at a time, in what order will they be removed?\par
\par
a)\tab ABCD \par
b)\tab DCBA\par
c)\tab DCAB\par
d)\tab ABCD\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab ABCD\par
\par
\par
\par
\par
7.\tab In linked list implementation of a queue, where does a new element be inserted?\par
\par
a)\tab At the head of link list\par
b)\tab At the tail of the link list \par
c)\tab At the centre position in the link list\par
d)\tab None\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab At the tail of the link list\par
\par
\par
\par
\par
8.\tab In the array implementation of circular queue, which of the following operation take worst case linear time?\par
\par
a)\tab Insertion\par
b)\tab Deletion\par
c)\tab To empty a queue\par
d)\tab None \par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab None\par
\par
\par
\par
\par
9.\tab In linked list implementation of queue, if only front pointer is maintained, which of the following operation take worst case linear time?\par
\par
a)\tab Insertion\par
b)\tab Deletion\par
c)\tab To empty a queue\par
d)\tab Both a) and c) \par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab Both a) and c)\par
\par
\par
\par
\par
10.\tab If the MAX_SIZE is the size of the array used in the implementation of circular queue. How is rear manipulated while inserting an element in the queue?\par
\par
a)\tab rear=(rear%1)+MAX_SIZE\par
b)\tab rear=rear%(MAX_SIZE+1)\par
c)\tab rear=(rear+1)%MAX_SIZE \par
d)\tab rear=rear+(1%MAX_SIZE)\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab rear=(rear+1)%MAX_SIZE\par
\par
\par
\par
\par
11.\tab If the MAX_SIZE is the size of the array used in the implementation of circular queue, array index start with 0, front point to the first element in the queue, and rear point to the last element in the queue. Which of the following condition specify that circular queue is FULL?\par
\par
a)\tab Front=rear= -1\par
b)\tab Front=(rear+1)%MAX_SIZE \par
c)\tab Rear=front+1\par
d)\tab Rear=(front+1)%MAX_SIZE\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab Front=(rear+1)%MAX_SIZE\par
\par
\par
\par
\par
12.\tab A circular queue is implemented using an array of size 10. The array index starts with 0, front is 6, and rear is 9. The insertion of next element takes place at the array index.\par
\par
a)\tab 0 \par
b)\tab 7\par
c)\tab 9\par
d)\tab 10\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab 0\par
\par
\par
\par
\par
13.\tab If the MAX_SIZE is the size of the array used in the implementation of circular queue, array index start with 0, front point to the first element in the queue, and rear point to the last element in the queue. Which of the following condition specify that circular queue is EMPTY?\par
\par
a)\tab Front=rear=0\par
b)\tab Front= rear=-1 \par
c)\tab Front=rear+1\par
d)\tab Front=(rear+1)%MAX_SIZE\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab Front= rear=-1\par
\par
\par
\par
\par
14.\tab A data structure in which elements can be inserted or deleted at/from both the ends but not in the middle is?\par
\par
a)\tab Queue\par
b)\tab Circular queue\par
c)\tab Dequeue \par
d)\tab Priority queue\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab Dequeue\par
\par
\par
\par
\par
15.\tab In linked list implementation of a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into a NONEMPTY queue?\par
\par
a)\tab Only front pointer\par
b)\tab Only rear pointer \par
c)\tab Both front and rear pointer\par
d)\tab None of the front and rear pointer\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab Only rear pointer\par
\par
\par
\par
\par
16.\tab A normal queue, if implemented using an array of size MAX_SIZE, gets full when\par
\par
a)\tab Rear=MAX_SIZE-1 \par
b)\tab Front=(rear+1)mod MAX_SIZE\par
c)\tab Front=rear+1\par
d)\tab Rear=front\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab Rear=MAX_SIZE-1\par
\par
\par
\par
\par
17.\tab In linked list implementation of a queue, front and rear pointers are tracked. Which of these pointers will change during an insertion into EMPTY queue?\par
\par
a)\tab Only front pointer\par
b)\tab Only rear pointer\par
c)\tab Both front and rear pointer \par
d)\tab None \par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab Both front and rear pointer\par
\par
\par
\par
\par
18.\tab An array of size MAX_SIZE is used to implement a circular queue. Front, Rear, and count are tracked. Suppose front is 0 and rear is MAX_SIZE -1. How many elements are present in the queue?\par
\par
a)\tab Zero\par
b)\tab One\par
c)\tab MAX_SIZE-1\par
d)\tab MAX_SIZE \par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab MAX_SIZE\par
\par
\par
\par
\par
19.\tab Suppose a circular queue of capacity (n-1) elements is implemented with an array of n elements. Assume that the insertion and deletion operations are carried out using REAR and FRONT as array index variables, respectively. Initially REAR=FRONT=0. The conditions to detect queue full and queue is empty are?\par
\par
a)\tab Full: (REAR+1)mod n == FRONT\par
Empty: REAR==FRONT \par
b)\tab Full: (REAR+1)mod n == FRONT\par
Empty: (FRONT+1) mod n == REAR\par
c)\tab Full: REAR==FRONT\par
Empty: (REAR+1) mod n==FRONT\par
d)\tab Full: (FRONT+1)mod n==REAR\par
Empty: REAR==FRONT\par
View Answer / Hide Answer\par
\par
ANSWER: a)\par
\par
\par
\par
\par
20.\tab Consider the following operations along with ENQUEUE and DEQUEUE operations queues, where k is a global parameter.\par
\par
Multiqueue(Q)\par
\{\par
m=k;\par
while(Q is not empty) and (m > 0)\par
\{\par
DEQUEUE(Q)\par
m=m-1\par
\}\par
\} \par
\par
What is the worst case time complexity of a sequence of n queue operations on an initially empty queue?\par
\par
a)\tab\f1\'e8 (n) \par
b)\tab\'e8 (n + k)\par
c)\tab\'e8 (nk)\par
d)\tab\'e8 (n2)\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab\'e8 (n)\par
\par
\par
\f0\par
}
 