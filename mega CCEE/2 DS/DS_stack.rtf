{\rtf1\ansi\ansicpg1252\deff0\deflang16393{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs22\par
 \par
MCQs on stacks with answers\par
02-19-2015 04:48 AM \par
\par
MCQs on stacks with answers\par
\par
\par
1.\tab The postfix form of the expression (A+ B)*(C*D- E)*F / G is?\par
\par
a)\tab AB+ CD*E - FG /**\par
b)\tab AB + CD* E - F **G /\par
c)\tab AB + CD* E - *F *G /\par
d)\tab AB + CDE * - * F *G /\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab AB+ CD*E - FG /**\par
\par
\par
\par
\par
2.\tab The data structure required to check whether an expression contains balanced parenthesis is?\par
\par
a)\tab Stack\par
b)\tab Queue\par
c)\tab Array\par
d)\tab Tree\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab Stack\par
\par
\par
\par
\par
3.\tab What data structure would you mostly likely see in a non recursive implementation of a recursive algorithm?\par
\par
a)\tab LinkList\par
b)\tab Stack\par
c)\tab Queue\par
d)\tab Tree\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab Stack\par
\par
\par
\par
\par
4.\tab The process of accessing data stored in a serial access memory is similar to manipulating data on a ------?\par
\par
a)\tab Heap\par
b)\tab Binary Tree\par
c)\tab Array\par
d)\tab Stack\par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab Stack\par
\par
\par
\par
\par
5.\tab The postfix form of A*B+C/D is?\par
\par
a)\tab *AB/CD+\par
b)\tab AB*CD/+\par
c)\tab A*BC+/D\par
d)\tab ABCD+/*\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab AB*CD/+\par
\par
\par
\par
\par
6.\tab Which data structure is needed to convert infix notation to postfix notation?\par
\par
a)\tab Branch\par
b)\tab Tree\par
c)\tab Queue\par
d)\tab Stack\par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab Stack\par
\par
\par
\par
\par
7.\tab The prefix form of A-B/ (C * D \u8896? E) is?\par
\par
a)\tab -/*\u8896?ACBDE\par
b)\tab -ABCD*\u8896?DE\par
c)\tab -A/B*C\u8896?DE\par
d)\tab -A/BC*\u8896?DE\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab -A/B*C\u8896?DE\par
\par
\par
\par
\par
8.\tab What is the result of the following operation\par
Top (Push (S, X))\par
\par
a)\tab X\par
b)\tab Null\par
c)\tab S\par
d)\tab None\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab X\par
\par
\par
\par
\par
9.\tab The prefix form of an infix expression p + q - r * t is?\par
\par
a)\tab + pq - *rt\par
b)\tab - +pqr * t\par
c)\tab - +pq * rt\par
d)\tab - + * pqrt\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab - +pq * rt\par
\par
\par
\par
\par
10.\tab Which data structure is used for implementing recursion?\par
\par
a)\tab Queue\par
b)\tab Stack\par
c)\tab Array\par
d)\tab List\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab Stack\par
\par
\par
\par
\par
11.\tab The result of evaluating the postfix expression 5, 4, 6, +, *, 4, 9, 3, /, +, * is?\par
\par
a)\tab 600\par
b)\tab 350\par
c)\tab 650\par
d)\tab 588\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab 350\par
\par
\par
\par
\par
12.\tab Convert the following infix expressions into its equivalent postfix expressions\par
(A + B \u8896?D)/(E - F)+G\par
\par
a)\tab (A B D \u8896? + E F - / G +)\par
b)\tab (A B D +\u8896? E F - / G +)\par
c)\tab (A B D \u8896? + E F/- G +)\par
d)\tab None\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab (A B D \u8896? + E F - / G +)\par
\par
\par
\par
\par
13.\tab Convert the following Infix expression to Postfix form using a stack\par
\par
x + y * z + (p * q + r) * s, Follow usual precedence rule and assume that the expression is legal.\par
\par
a)\tab xyz*+pq*r+s*+\par
b)\tab xyz*+pq*r+s+*\par
c)\tab xyz+*pq*r+s*+\par
d)\tab none\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab xyz*+pq*r+s*+\par
\par
\par
\par
\par
14.\tab Which of the following statement(s) about stack data structure is/are NOT correct?\par
\par
a)\tab Stack data structure can be implemented using linked list\par
b)\tab New node can only be added at the top of the stack\par
c)\tab Stack is the FIFO data structure\par
d)\tab The last node at the bottom of the stack has a NULL link\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab Stack is the FIFO data structure\par
\par
\par
\par
\par
15.\tab Consider the linked list implementation of a stack. Which of the following node is considered as Top of the stack?\par
\par
a)\tab First node\par
b)\tab Last node\par
c)\tab Any node\par
d)\tab Middle node\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab First node\par
\par
\par
\par
\par
16.\tab Consider the following operation performed on a stack of size 5.\par
Push(1);\par
Pop();\par
Push(2);\par
Push(3);\par
Pop();\par
Push(4);\par
Pop();\par
Pop();\par
Push(5);\par
\par
After the completion of all operation, the no of element present on stack are\par
\par
a)\tab 1\par
b)\tab 2\par
c)\tab 3\par
d)\tab 4\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab 1\par
\par
\par
\par
\par
17.\tab Which of the following is not an inherent application of stack?\par
\par
a)\tab Reversing a string\par
b)\tab Evaluation of postfix expression\par
c)\tab Implementation of recursion\par
d)\tab Job scheduling\par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab Job scheduling\par
\par
\par
\par
\par
18.\tab Which of the following operation take worst case linear time in the array implementation of stack?\par
\par
a)\tab Push\par
b)\tab Pop\par
c)\tab IsEmpty\par
d)\tab None\par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab None\par
\par
\par
\par
\par
19.\tab The type of expression in which operator succeeds its operands is?\par
\par
a)\tab Infix Expression\par
b)\tab pre fix Expression\par
c)\tab postfix Expression\par
d)\tab None\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab postfix Expression\par
\par
\par
\par
\par
20.\tab Which of the following application generally use a stack?\par
\par
a)\tab Parenthesis balancing program\par
b)\tab Syntax analyzer in compiler\par
c)\tab Keeping track of local variables at run time\par
d)\tab All of the above\par
View Answer / Hide Answer\par
\par
ANSWER: d)\tab All of the above\par
\par
\par
\par
\par
21.\tab Consider the following array implementation of stack:\par
\par
#define MAX 10\par
Struct STACK\par
\{\par
Int arr [MAX];\par
Int top = -1;\par
\}\par
\par
If the array index starts with 0, the maximum value of top which does not cause stack overflow is?\par
\par
a)\tab 8\par
b)\tab 9\par
c)\tab 10\par
d)\tab 11\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab 8\par
\par
\par
\par
\par
22.\tab What is the minimum number of stacks of size n required to implement a queue of size n?\par
\par
a)\tab One\par
b)\tab Two\par
c)\tab Three\par
d)\tab Four\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab Two\par
\par
\par
\par
\par
23.\tab Assume that the operators +,-, X are left associative and \u8896? is right associative. The order of precedence (from highest to lowest) is \u8896?, X, +, -. The postfix expression corresponding to the infix expression a + b X c \endash  d \u8896? e \u8896? f is\par
\par
a)\tab abc X+ def \u8896? \u8896? - \par
b)\tab abc X+ de\u8896?f\u8896? - \par
c)\tab ab+c Xd \endash  e \u8896?f\u8896?\par
d)\tab -+aXbc\u8896? \u8896?def\par
View Answer / Hide Answer\par
\par
ANSWER: a)\tab abc X+ def \u8896? \u8896? -\par
\par
\par
\par
\par
24.\tab If the elements \ldblquote A\rdblquote , \ldblquote B\rdblquote , \ldblquote C\rdblquote  and \ldblquote D\rdblquote  are placed in a stack and are deleted one at a time, in what order will they be removed?\par
\par
a)\tab ABCD\par
b)\tab DCBA\par
c)\tab DCAB\par
d)\tab ABDC\par
View Answer / Hide Answer\par
\par
ANSWER: b)\tab DCBA\par
\par
\par
\par
\par
25.\tab Consider the usual implementation of parentheses balancing program using stack. What is the maximum number of parentheses that will appear on stack at any instance of time during the analysis of ( ( ) ( ( ) ) ( ( ) ) )?\par
\par
a)\tab 1\par
b)\tab 2\par
c)\tab 3\par
d)\tab 4\par
View Answer / Hide Answer\par
\par
ANSWER: c)\tab 3\par
}
 